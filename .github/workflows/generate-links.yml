name: Generate Team Note Links

on:
  push:
    branches:
      - main
    paths:
      - "**/cs-note/*.md"
      - ".github/workflows/generate-links.yml"

permissions:
  contents: write

jobs:
  generate-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate links for all chapters and members
        run: |
          TEAM_DIRS="이예서 이동현 이명욱"
          BOOKS=$(find $TEAM_DIRS -type d -name 'cs-note' | sort | uniq)
          for book in $BOOKS; do
            CHAPTERS=$(find $book -type f -name '*.md' -exec basename {} \; | sort | uniq)
            for chapter in $CHAPTERS; do
              DIR=cs-note
              mkdir -p $DIR
              OUT=$DIR/$chapter
              [ -f "$OUT" ] && CONTENTS="$(cat "$OUT")" || CONTENTS=""
              LINKS="<!-- TEAM_LINKS_START -->\n## 팀원별 정리 링크\n"
              for member in $TEAM_DIRS; do
                SRC="$member/$DIR/$chapter"
                if [ -f "$SRC" ]; then
                  LINKS="$LINKS- [$member-$(basename $chapter .md)]($SRC)\n"
                fi
              done
              LINKS="$LINKS<!-- TEAM_LINKS_END -->"
              if echo "$CONTENTS" | grep -q '<!-- TEAM_LINKS_START -->'; then
                NEW_CONTENTS=$(echo "$CONTENTS" | awk '/<!-- TEAM_LINKS_START -->/{f=1;print;next}/<!-- TEAM_LINKS_END -->/{f=0;print;next}!f' | sed "/<!-- TEAM_LINKS_START -->/,/<!-- TEAM_LINKS_END -->/c\\$LINKS")
              else
                NEW_CONTENTS="$CONTENTS\n\n$LINKS"
              fi
              echo -e "$NEW_CONTENTS" > "$OUT"
            done
          done

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add cs-note/
          git diff --cached --quiet || git commit -m 'chore: 자동 링크 생성: 팀원 md → cs-note 링크'
          git push
